# -*- coding: utf-8 -*-
"""Latihan Mandiri Ai (IMDb Top 100 Movies Dataset (2025 Edition).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1je7npqGCRn-ElsqOvrt0jzzAzeQu8riX
"""

# Upload file kaggle.json (hanya 1x per sesi)
from google.colab import files
files.upload()  # pilih file kaggle.json

!mkdir -p ~/.kaggle
!mv kaggle.json ~/.kaggle/
!chmod 600 ~/.kaggle/kaggle.json

!kaggle datasets download -d shayanzk/imdb-top-100-movies-dataset-2025-edition

!unzip -q imdb-top-100-movies-dataset-2025-edition.zip

# =========================================
# 1️⃣ Import Library
# =========================================
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

sns.set(style="whitegrid")
plt.rcParams["figure.figsize"] = (12,6)

# =========================================
# 2️⃣ Membaca Dataset
# =========================================
# Ganti nama file sesuai file CSV kamu
df = pd.read_csv('top_100_movies_full_best_effort.csv')

# Lihat 5 data pertama
print("5 Film Teratas:")
display(df.head())

# Info dataset
print("\nInfo Dataset:")
df.info()

# Statistik deskriptif
print("\nStatistik Deskriptif:")
display(df.describe())

# =========================================
# 3️⃣ Eksplorasi Dataset
# =========================================

# Top 10 Film Berdasarkan Rating
print("\nTop 10 Film Berdasarkan Rating:")
display(df.sort_values('IMDb Rating', ascending=False).head(10))

# Distribusi Genre
print("\nDistribusi Genre Film:")
genre_counts = df['Genre(s)'].value_counts()
display(genre_counts)

# Visualisasi Distribusi Genre
genre_counts.plot(kind='bar', color='skyblue')
plt.title('Distribusi Genre Film')
plt.xlabel('Genre')
plt.ylabel('Jumlah Film')
plt.show()

# Rating vs Box Office
plt.figure(figsize=(10,6))
sns.scatterplot(data=df, x='Box Office ($M)', y='IMDb Rating', hue='Genre(s)', palette='tab10', s=100)
plt.title('Rating vs Box Office')
plt.xlabel('Box Office ($M)')
plt.ylabel('Rating')
plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left')
plt.show()

# Tahun Rilis vs Rating
plt.figure(figsize=(12,6)) # Increase figure width
# Group years into decades for better visualization
df['Decade'] = (df['Year'] // 10) * 10
sns.boxplot(data=df, x='Decade', y='IMDb Rating', palette='Set2')
plt.title('Distribusi Rating Berdasarkan Dekade Rilis')
plt.xlabel('Dekade Rilis')
plt.ylabel('IMDb Rating') # Changed label to match column name
plt.xticks(rotation=45) # Rotate x-axis labels for better readability
plt.tight_layout() # Adjust layout to prevent labels overlapping
plt.show()

# Korelasi antar kolom numerik
plt.figure(figsize=(10,6))
sns.heatmap(df.corr(numeric_only=True), annot=True, cmap='coolwarm')
plt.title('Korelasi Antar Variabel')
plt.show()

# Top 10 Film Berdasarkan Box Office
print("\nTop 10 Film Berdasarkan Box Office:")
display(df.sort_values('Box Office ($M)', ascending=False).head(10))